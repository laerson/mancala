name: Test

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop, main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Generate protobuf code
      run: |
        # Install protoc
        sudo apt-get update && sudo apt-get install -y protobuf-compiler

        # Install Go plugins
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

        # Generate protobuf files
        protoc --proto_path=. \
          --go_out=. --go_opt=paths=source_relative \
          --go-grpc_out=. --go-grpc_opt=paths=source_relative \
          proto/engine/engine.proto proto/games/games.proto

    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
      env:
        CGO_ENABLED: 1

    - name: Run integration tests
      run: |
        # Run testcontainer tests (requires Docker)
        go test -v -tags=integration ./internal/games/...
      env:
        CGO_ENABLED: 1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Build binaries
      run: |
        go build -o bin/engine ./cmd/engine
        go build -o bin/games ./cmd/games

    - name: Test binary execution
      run: |
        timeout 5s ./bin/engine || [ $? -eq 124 ]  # Expect timeout since no Redis
        timeout 5s ./bin/games || [ $? -eq 124 ]   # Expect timeout since no dependencies

    - name: Check for vulnerabilities
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...