// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/matchmaking/matchmaking.proto

package matchmakingpb

import (
	games "github.com/laerson/mancala/proto/games"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Matchmaking queue status
type QueueStatus int32

const (
	QueueStatus_QUEUED       QueueStatus = 0
	QueueStatus_MATCHED      QueueStatus = 1
	QueueStatus_CANCELLED    QueueStatus = 2
	QueueStatus_GAME_CREATED QueueStatus = 3
)

// Enum value maps for QueueStatus.
var (
	QueueStatus_name = map[int32]string{
		0: "QUEUED",
		1: "MATCHED",
		2: "CANCELLED",
		3: "GAME_CREATED",
	}
	QueueStatus_value = map[string]int32{
		"QUEUED":       0,
		"MATCHED":      1,
		"CANCELLED":    2,
		"GAME_CREATED": 3,
	}
)

func (x QueueStatus) Enum() *QueueStatus {
	p := new(QueueStatus)
	*p = x
	return p
}

func (x QueueStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_matchmaking_matchmaking_proto_enumTypes[0].Descriptor()
}

func (QueueStatus) Type() protoreflect.EnumType {
	return &file_proto_matchmaking_matchmaking_proto_enumTypes[0]
}

func (x QueueStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueStatus.Descriptor instead.
func (QueueStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{0}
}

// Player information for matchmaking
type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Enqueue request
type EnqueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *Player                `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueRequest) Reset() {
	*x = EnqueueRequest{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRequest) ProtoMessage() {}

func (x *EnqueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{1}
}

func (x *EnqueueRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

type EnqueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	QueueId       string                 `protobuf:"bytes,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueResponse) Reset() {
	*x = EnqueueResponse{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueResponse) ProtoMessage() {}

func (x *EnqueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueResponse.ProtoReflect.Descriptor instead.
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{2}
}

func (x *EnqueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EnqueueResponse) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *EnqueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Cancel queue request
type CancelQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	QueueId       string                 `protobuf:"bytes,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelQueueRequest) Reset() {
	*x = CancelQueueRequest{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueueRequest) ProtoMessage() {}

func (x *CancelQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueueRequest.ProtoReflect.Descriptor instead.
func (*CancelQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{3}
}

func (x *CancelQueueRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CancelQueueRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

type CancelQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelQueueResponse) Reset() {
	*x = CancelQueueResponse{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQueueResponse) ProtoMessage() {}

func (x *CancelQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQueueResponse.ProtoReflect.Descriptor instead.
func (*CancelQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{4}
}

func (x *CancelQueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelQueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Queue status request
type GetQueueStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	QueueId       string                 `protobuf:"bytes,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueStatusRequest) Reset() {
	*x = GetQueueStatusRequest{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueStatusRequest) ProtoMessage() {}

func (x *GetQueueStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueStatusRequest.ProtoReflect.Descriptor instead.
func (*GetQueueStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{5}
}

func (x *GetQueueStatusRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetQueueStatusRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

type GetQueueStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        QueueStatus            `protobuf:"varint,1,opt,name=status,proto3,enum=proto.matchmaking.QueueStatus" json:"status,omitempty"`
	QueuePosition int32                  `protobuf:"varint,2,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	GameId        string                 `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // Set when status is GAME_CREATED
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueStatusResponse) Reset() {
	*x = GetQueueStatusResponse{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueStatusResponse) ProtoMessage() {}

func (x *GetQueueStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueStatusResponse.ProtoReflect.Descriptor instead.
func (*GetQueueStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{6}
}

func (x *GetQueueStatusResponse) GetStatus() QueueStatus {
	if x != nil {
		return x.Status
	}
	return QueueStatus_QUEUED
}

func (x *GetQueueStatusResponse) GetQueuePosition() int32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *GetQueueStatusResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

// Match found event (for event bus)
type MatchFoundEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Player1       *Player                `protobuf:"bytes,2,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2       *Player                `protobuf:"bytes,3,opt,name=player2,proto3" json:"player2,omitempty"`
	GameId        string                 `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchFoundEvent) Reset() {
	*x = MatchFoundEvent{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchFoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFoundEvent) ProtoMessage() {}

func (x *MatchFoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFoundEvent.ProtoReflect.Descriptor instead.
func (*MatchFoundEvent) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{7}
}

func (x *MatchFoundEvent) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchFoundEvent) GetPlayer1() *Player {
	if x != nil {
		return x.Player1
	}
	return nil
}

func (x *MatchFoundEvent) GetPlayer2() *Player {
	if x != nil {
		return x.Player2
	}
	return nil
}

func (x *MatchFoundEvent) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MatchFoundEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Streaming matchmaking updates
type MatchmakingUpdate struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	QueueId string                 `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Status  QueueStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=proto.matchmaking.QueueStatus" json:"status,omitempty"`
	// Types that are valid to be assigned to Update:
	//
	//	*MatchmakingUpdate_QueuePosition
	//	*MatchmakingUpdate_MatchFound
	//	*MatchmakingUpdate_QueueCancelled
	//	*MatchmakingUpdate_GameCreated
	Update        isMatchmakingUpdate_Update `protobuf_oneof:"update"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchmakingUpdate) Reset() {
	*x = MatchmakingUpdate{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchmakingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchmakingUpdate) ProtoMessage() {}

func (x *MatchmakingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchmakingUpdate.ProtoReflect.Descriptor instead.
func (*MatchmakingUpdate) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{8}
}

func (x *MatchmakingUpdate) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *MatchmakingUpdate) GetStatus() QueueStatus {
	if x != nil {
		return x.Status
	}
	return QueueStatus_QUEUED
}

func (x *MatchmakingUpdate) GetUpdate() isMatchmakingUpdate_Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *MatchmakingUpdate) GetQueuePosition() *QueuePositionUpdate {
	if x != nil {
		if x, ok := x.Update.(*MatchmakingUpdate_QueuePosition); ok {
			return x.QueuePosition
		}
	}
	return nil
}

func (x *MatchmakingUpdate) GetMatchFound() *MatchFound {
	if x != nil {
		if x, ok := x.Update.(*MatchmakingUpdate_MatchFound); ok {
			return x.MatchFound
		}
	}
	return nil
}

func (x *MatchmakingUpdate) GetQueueCancelled() *QueueCancelled {
	if x != nil {
		if x, ok := x.Update.(*MatchmakingUpdate_QueueCancelled); ok {
			return x.QueueCancelled
		}
	}
	return nil
}

func (x *MatchmakingUpdate) GetGameCreated() *GameCreated {
	if x != nil {
		if x, ok := x.Update.(*MatchmakingUpdate_GameCreated); ok {
			return x.GameCreated
		}
	}
	return nil
}

type isMatchmakingUpdate_Update interface {
	isMatchmakingUpdate_Update()
}

type MatchmakingUpdate_QueuePosition struct {
	QueuePosition *QueuePositionUpdate `protobuf:"bytes,3,opt,name=queue_position,json=queuePosition,proto3,oneof"`
}

type MatchmakingUpdate_MatchFound struct {
	MatchFound *MatchFound `protobuf:"bytes,4,opt,name=match_found,json=matchFound,proto3,oneof"`
}

type MatchmakingUpdate_QueueCancelled struct {
	QueueCancelled *QueueCancelled `protobuf:"bytes,5,opt,name=queue_cancelled,json=queueCancelled,proto3,oneof"`
}

type MatchmakingUpdate_GameCreated struct {
	GameCreated *GameCreated `protobuf:"bytes,6,opt,name=game_created,json=gameCreated,proto3,oneof"`
}

func (*MatchmakingUpdate_QueuePosition) isMatchmakingUpdate_Update() {}

func (*MatchmakingUpdate_MatchFound) isMatchmakingUpdate_Update() {}

func (*MatchmakingUpdate_QueueCancelled) isMatchmakingUpdate_Update() {}

func (*MatchmakingUpdate_GameCreated) isMatchmakingUpdate_Update() {}

type QueuePositionUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      int32                  `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueuePositionUpdate) Reset() {
	*x = QueuePositionUpdate{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueuePositionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuePositionUpdate) ProtoMessage() {}

func (x *QueuePositionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuePositionUpdate.ProtoReflect.Descriptor instead.
func (*QueuePositionUpdate) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{9}
}

func (x *QueuePositionUpdate) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type MatchFound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Opponent      *Player                `protobuf:"bytes,2,opt,name=opponent,proto3" json:"opponent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchFound) Reset() {
	*x = MatchFound{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFound) ProtoMessage() {}

func (x *MatchFound) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFound.ProtoReflect.Descriptor instead.
func (*MatchFound) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{10}
}

func (x *MatchFound) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchFound) GetOpponent() *Player {
	if x != nil {
		return x.Opponent
	}
	return nil
}

type QueueCancelled struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueCancelled) Reset() {
	*x = QueueCancelled{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueCancelled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueCancelled) ProtoMessage() {}

func (x *QueueCancelled) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueCancelled.ProtoReflect.Descriptor instead.
func (*QueueCancelled) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{11}
}

func (x *QueueCancelled) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GameCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Game          *games.Game            `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameCreated) Reset() {
	*x = GameCreated{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCreated) ProtoMessage() {}

func (x *GameCreated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCreated.ProtoReflect.Descriptor instead.
func (*GameCreated) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{12}
}

func (x *GameCreated) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameCreated) GetGame() *games.Game {
	if x != nil {
		return x.Game
	}
	return nil
}

// Streaming request
type StreamUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	QueueId       string                 `protobuf:"bytes,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamUpdatesRequest) Reset() {
	*x = StreamUpdatesRequest{}
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamUpdatesRequest) ProtoMessage() {}

func (x *StreamUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchmaking_matchmaking_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamUpdatesRequest.ProtoReflect.Descriptor instead.
func (*StreamUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_proto_matchmaking_matchmaking_proto_rawDescGZIP(), []int{13}
}

func (x *StreamUpdatesRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *StreamUpdatesRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

var File_proto_matchmaking_matchmaking_proto protoreflect.FileDescriptor

const file_proto_matchmaking_matchmaking_proto_rawDesc = "" +
	"\n" +
	"#proto/matchmaking/matchmaking.proto\x12\x11proto.matchmaking\x1a\x17proto/games/games.proto\",\n" +
	"\x06Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"C\n" +
	"\x0eEnqueueRequest\x121\n" +
	"\x06player\x18\x01 \x01(\v2\x19.proto.matchmaking.PlayerR\x06player\"`\n" +
	"\x0fEnqueueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bqueue_id\x18\x02 \x01(\tR\aqueueId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"L\n" +
	"\x12CancelQueueRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bqueue_id\x18\x02 \x01(\tR\aqueueId\"I\n" +
	"\x13CancelQueueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"O\n" +
	"\x15GetQueueStatusRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bqueue_id\x18\x02 \x01(\tR\aqueueId\"\x90\x01\n" +
	"\x16GetQueueStatusResponse\x126\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1e.proto.matchmaking.QueueStatusR\x06status\x12%\n" +
	"\x0equeue_position\x18\x02 \x01(\x05R\rqueuePosition\x12\x17\n" +
	"\agame_id\x18\x04 \x01(\tR\x06gameId\"\xcd\x01\n" +
	"\x0fMatchFoundEvent\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x123\n" +
	"\aplayer1\x18\x02 \x01(\v2\x19.proto.matchmaking.PlayerR\aplayer1\x123\n" +
	"\aplayer2\x18\x03 \x01(\v2\x19.proto.matchmaking.PlayerR\aplayer2\x12\x17\n" +
	"\agame_id\x18\x04 \x01(\tR\x06gameId\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"\x96\x03\n" +
	"\x11MatchmakingUpdate\x12\x19\n" +
	"\bqueue_id\x18\x01 \x01(\tR\aqueueId\x126\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1e.proto.matchmaking.QueueStatusR\x06status\x12O\n" +
	"\x0equeue_position\x18\x03 \x01(\v2&.proto.matchmaking.QueuePositionUpdateH\x00R\rqueuePosition\x12@\n" +
	"\vmatch_found\x18\x04 \x01(\v2\x1d.proto.matchmaking.MatchFoundH\x00R\n" +
	"matchFound\x12L\n" +
	"\x0fqueue_cancelled\x18\x05 \x01(\v2!.proto.matchmaking.QueueCancelledH\x00R\x0equeueCancelled\x12C\n" +
	"\fgame_created\x18\x06 \x01(\v2\x1e.proto.matchmaking.GameCreatedH\x00R\vgameCreatedB\b\n" +
	"\x06update\"1\n" +
	"\x13QueuePositionUpdate\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\x05R\bposition\"^\n" +
	"\n" +
	"MatchFound\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x125\n" +
	"\bopponent\x18\x02 \x01(\v2\x19.proto.matchmaking.PlayerR\bopponent\"(\n" +
	"\x0eQueueCancelled\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"M\n" +
	"\vGameCreated\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12%\n" +
	"\x04game\x18\x02 \x01(\v2\x11.proto.games.GameR\x04game\"N\n" +
	"\x14StreamUpdatesRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bqueue_id\x18\x02 \x01(\tR\aqueueId*G\n" +
	"\vQueueStatus\x12\n" +
	"\n" +
	"\x06QUEUED\x10\x00\x12\v\n" +
	"\aMATCHED\x10\x01\x12\r\n" +
	"\tCANCELLED\x10\x02\x12\x10\n" +
	"\fGAME_CREATED\x10\x032\x86\x03\n" +
	"\vMatchmaking\x12P\n" +
	"\aEnqueue\x12!.proto.matchmaking.EnqueueRequest\x1a\".proto.matchmaking.EnqueueResponse\x12\\\n" +
	"\vCancelQueue\x12%.proto.matchmaking.CancelQueueRequest\x1a&.proto.matchmaking.CancelQueueResponse\x12e\n" +
	"\x0eGetQueueStatus\x12(.proto.matchmaking.GetQueueStatusRequest\x1a).proto.matchmaking.GetQueueStatusResponse\x12`\n" +
	"\rStreamUpdates\x12'.proto.matchmaking.StreamUpdatesRequest\x1a$.proto.matchmaking.MatchmakingUpdate0\x01B<Z:github.com/laerson/mancala/proto/matchmaking;matchmakingpbb\x06proto3"

var (
	file_proto_matchmaking_matchmaking_proto_rawDescOnce sync.Once
	file_proto_matchmaking_matchmaking_proto_rawDescData []byte
)

func file_proto_matchmaking_matchmaking_proto_rawDescGZIP() []byte {
	file_proto_matchmaking_matchmaking_proto_rawDescOnce.Do(func() {
		file_proto_matchmaking_matchmaking_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_matchmaking_matchmaking_proto_rawDesc), len(file_proto_matchmaking_matchmaking_proto_rawDesc)))
	})
	return file_proto_matchmaking_matchmaking_proto_rawDescData
}

var file_proto_matchmaking_matchmaking_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_matchmaking_matchmaking_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_matchmaking_matchmaking_proto_goTypes = []any{
	(QueueStatus)(0),               // 0: proto.matchmaking.QueueStatus
	(*Player)(nil),                 // 1: proto.matchmaking.Player
	(*EnqueueRequest)(nil),         // 2: proto.matchmaking.EnqueueRequest
	(*EnqueueResponse)(nil),        // 3: proto.matchmaking.EnqueueResponse
	(*CancelQueueRequest)(nil),     // 4: proto.matchmaking.CancelQueueRequest
	(*CancelQueueResponse)(nil),    // 5: proto.matchmaking.CancelQueueResponse
	(*GetQueueStatusRequest)(nil),  // 6: proto.matchmaking.GetQueueStatusRequest
	(*GetQueueStatusResponse)(nil), // 7: proto.matchmaking.GetQueueStatusResponse
	(*MatchFoundEvent)(nil),        // 8: proto.matchmaking.MatchFoundEvent
	(*MatchmakingUpdate)(nil),      // 9: proto.matchmaking.MatchmakingUpdate
	(*QueuePositionUpdate)(nil),    // 10: proto.matchmaking.QueuePositionUpdate
	(*MatchFound)(nil),             // 11: proto.matchmaking.MatchFound
	(*QueueCancelled)(nil),         // 12: proto.matchmaking.QueueCancelled
	(*GameCreated)(nil),            // 13: proto.matchmaking.GameCreated
	(*StreamUpdatesRequest)(nil),   // 14: proto.matchmaking.StreamUpdatesRequest
	(*games.Game)(nil),             // 15: proto.games.Game
}
var file_proto_matchmaking_matchmaking_proto_depIdxs = []int32{
	1,  // 0: proto.matchmaking.EnqueueRequest.player:type_name -> proto.matchmaking.Player
	0,  // 1: proto.matchmaking.GetQueueStatusResponse.status:type_name -> proto.matchmaking.QueueStatus
	1,  // 2: proto.matchmaking.MatchFoundEvent.player1:type_name -> proto.matchmaking.Player
	1,  // 3: proto.matchmaking.MatchFoundEvent.player2:type_name -> proto.matchmaking.Player
	0,  // 4: proto.matchmaking.MatchmakingUpdate.status:type_name -> proto.matchmaking.QueueStatus
	10, // 5: proto.matchmaking.MatchmakingUpdate.queue_position:type_name -> proto.matchmaking.QueuePositionUpdate
	11, // 6: proto.matchmaking.MatchmakingUpdate.match_found:type_name -> proto.matchmaking.MatchFound
	12, // 7: proto.matchmaking.MatchmakingUpdate.queue_cancelled:type_name -> proto.matchmaking.QueueCancelled
	13, // 8: proto.matchmaking.MatchmakingUpdate.game_created:type_name -> proto.matchmaking.GameCreated
	1,  // 9: proto.matchmaking.MatchFound.opponent:type_name -> proto.matchmaking.Player
	15, // 10: proto.matchmaking.GameCreated.game:type_name -> proto.games.Game
	2,  // 11: proto.matchmaking.Matchmaking.Enqueue:input_type -> proto.matchmaking.EnqueueRequest
	4,  // 12: proto.matchmaking.Matchmaking.CancelQueue:input_type -> proto.matchmaking.CancelQueueRequest
	6,  // 13: proto.matchmaking.Matchmaking.GetQueueStatus:input_type -> proto.matchmaking.GetQueueStatusRequest
	14, // 14: proto.matchmaking.Matchmaking.StreamUpdates:input_type -> proto.matchmaking.StreamUpdatesRequest
	3,  // 15: proto.matchmaking.Matchmaking.Enqueue:output_type -> proto.matchmaking.EnqueueResponse
	5,  // 16: proto.matchmaking.Matchmaking.CancelQueue:output_type -> proto.matchmaking.CancelQueueResponse
	7,  // 17: proto.matchmaking.Matchmaking.GetQueueStatus:output_type -> proto.matchmaking.GetQueueStatusResponse
	9,  // 18: proto.matchmaking.Matchmaking.StreamUpdates:output_type -> proto.matchmaking.MatchmakingUpdate
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_matchmaking_matchmaking_proto_init() }
func file_proto_matchmaking_matchmaking_proto_init() {
	if File_proto_matchmaking_matchmaking_proto != nil {
		return
	}
	file_proto_matchmaking_matchmaking_proto_msgTypes[8].OneofWrappers = []any{
		(*MatchmakingUpdate_QueuePosition)(nil),
		(*MatchmakingUpdate_MatchFound)(nil),
		(*MatchmakingUpdate_QueueCancelled)(nil),
		(*MatchmakingUpdate_GameCreated)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_matchmaking_matchmaking_proto_rawDesc), len(file_proto_matchmaking_matchmaking_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_matchmaking_matchmaking_proto_goTypes,
		DependencyIndexes: file_proto_matchmaking_matchmaking_proto_depIdxs,
		EnumInfos:         file_proto_matchmaking_matchmaking_proto_enumTypes,
		MessageInfos:      file_proto_matchmaking_matchmaking_proto_msgTypes,
	}.Build()
	File_proto_matchmaking_matchmaking_proto = out.File
	file_proto_matchmaking_matchmaking_proto_goTypes = nil
	file_proto_matchmaking_matchmaking_proto_depIdxs = nil
}
