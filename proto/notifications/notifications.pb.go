// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/notifications/notifications.proto

package notificationspb

import (
	engine "github.com/laerson/mancala/proto/engine"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Notification types
type NotificationType int32

const (
	NotificationType_NOTIFICATION_TYPE_UNSPECIFIED NotificationType = 0
	NotificationType_NOTIFICATION_TYPE_MATCH_FOUND NotificationType = 1
	NotificationType_NOTIFICATION_TYPE_MOVE_MADE   NotificationType = 2
	NotificationType_NOTIFICATION_TYPE_GAME_OVER   NotificationType = 3
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_UNSPECIFIED",
		1: "NOTIFICATION_TYPE_MATCH_FOUND",
		2: "NOTIFICATION_TYPE_MOVE_MADE",
		3: "NOTIFICATION_TYPE_GAME_OVER",
	}
	NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_UNSPECIFIED": 0,
		"NOTIFICATION_TYPE_MATCH_FOUND": 1,
		"NOTIFICATION_TYPE_MOVE_MADE":   2,
		"NOTIFICATION_TYPE_GAME_OVER":   3,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notifications_notifications_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_proto_notifications_notifications_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{0}
}

// Request to subscribe to notifications
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_proto_notifications_notifications_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Notification message sent to clients
type Notification struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      NotificationType       `protobuf:"varint,2,opt,name=type,proto3,enum=proto.notifications.NotificationType" json:"type,omitempty"`
	GameId    string                 `protobuf:"bytes,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Timestamp int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*Notification_MatchFound
	//	*Notification_MoveMade
	//	*Notification_GameOver
	Data          isNotification_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_proto_notifications_notifications_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_UNSPECIFIED
}

func (x *Notification) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *Notification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Notification) GetData() isNotification_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Notification) GetMatchFound() *MatchFoundNotification {
	if x != nil {
		if x, ok := x.Data.(*Notification_MatchFound); ok {
			return x.MatchFound
		}
	}
	return nil
}

func (x *Notification) GetMoveMade() *MoveMadeNotification {
	if x != nil {
		if x, ok := x.Data.(*Notification_MoveMade); ok {
			return x.MoveMade
		}
	}
	return nil
}

func (x *Notification) GetGameOver() *GameOverNotification {
	if x != nil {
		if x, ok := x.Data.(*Notification_GameOver); ok {
			return x.GameOver
		}
	}
	return nil
}

type isNotification_Data interface {
	isNotification_Data()
}

type Notification_MatchFound struct {
	MatchFound *MatchFoundNotification `protobuf:"bytes,5,opt,name=match_found,json=matchFound,proto3,oneof"`
}

type Notification_MoveMade struct {
	MoveMade *MoveMadeNotification `protobuf:"bytes,6,opt,name=move_made,json=moveMade,proto3,oneof"`
}

type Notification_GameOver struct {
	GameOver *GameOverNotification `protobuf:"bytes,7,opt,name=game_over,json=gameOver,proto3,oneof"`
}

func (*Notification_MatchFound) isNotification_Data() {}

func (*Notification_MoveMade) isNotification_Data() {}

func (*Notification_GameOver) isNotification_Data() {}

// Match found notification data
type MatchFoundNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Player1Id     string                 `protobuf:"bytes,2,opt,name=player1_id,json=player1Id,proto3" json:"player1_id,omitempty"`
	Player1Name   string                 `protobuf:"bytes,3,opt,name=player1_name,json=player1Name,proto3" json:"player1_name,omitempty"`
	Player2Id     string                 `protobuf:"bytes,4,opt,name=player2_id,json=player2Id,proto3" json:"player2_id,omitempty"`
	Player2Name   string                 `protobuf:"bytes,5,opt,name=player2_name,json=player2Name,proto3" json:"player2_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchFoundNotification) Reset() {
	*x = MatchFoundNotification{}
	mi := &file_proto_notifications_notifications_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchFoundNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFoundNotification) ProtoMessage() {}

func (x *MatchFoundNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFoundNotification.ProtoReflect.Descriptor instead.
func (*MatchFoundNotification) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *MatchFoundNotification) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchFoundNotification) GetPlayer1Id() string {
	if x != nil {
		return x.Player1Id
	}
	return ""
}

func (x *MatchFoundNotification) GetPlayer1Name() string {
	if x != nil {
		return x.Player1Name
	}
	return ""
}

func (x *MatchFoundNotification) GetPlayer2Id() string {
	if x != nil {
		return x.Player2Id
	}
	return ""
}

func (x *MatchFoundNotification) GetPlayer2Name() string {
	if x != nil {
		return x.Player2Name
	}
	return ""
}

// Move made notification data
type MoveMadeNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PitIndex      uint32                 `protobuf:"varint,2,opt,name=pit_index,json=pitIndex,proto3" json:"pit_index,omitempty"`
	GameState     *engine.GameState      `protobuf:"bytes,3,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
	MoveResult    *engine.MoveResult     `protobuf:"bytes,4,opt,name=move_result,json=moveResult,proto3" json:"move_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveMadeNotification) Reset() {
	*x = MoveMadeNotification{}
	mi := &file_proto_notifications_notifications_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveMadeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveMadeNotification) ProtoMessage() {}

func (x *MoveMadeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveMadeNotification.ProtoReflect.Descriptor instead.
func (*MoveMadeNotification) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{3}
}

func (x *MoveMadeNotification) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *MoveMadeNotification) GetPitIndex() uint32 {
	if x != nil {
		return x.PitIndex
	}
	return 0
}

func (x *MoveMadeNotification) GetGameState() *engine.GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

func (x *MoveMadeNotification) GetMoveResult() *engine.MoveResult {
	if x != nil {
		return x.MoveResult
	}
	return nil
}

// Game over notification data
type GameOverNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FinalState    *engine.GameState      `protobuf:"bytes,1,opt,name=final_state,json=finalState,proto3" json:"final_state,omitempty"`
	WinnerId      string                 `protobuf:"bytes,2,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	IsDraw        bool                   `protobuf:"varint,3,opt,name=is_draw,json=isDraw,proto3" json:"is_draw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameOverNotification) Reset() {
	*x = GameOverNotification{}
	mi := &file_proto_notifications_notifications_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameOverNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOverNotification) ProtoMessage() {}

func (x *GameOverNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notifications_notifications_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOverNotification.ProtoReflect.Descriptor instead.
func (*GameOverNotification) Descriptor() ([]byte, []int) {
	return file_proto_notifications_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *GameOverNotification) GetFinalState() *engine.GameState {
	if x != nil {
		return x.FinalState
	}
	return nil
}

func (x *GameOverNotification) GetWinnerId() string {
	if x != nil {
		return x.WinnerId
	}
	return ""
}

func (x *GameOverNotification) GetIsDraw() bool {
	if x != nil {
		return x.IsDraw
	}
	return false
}

var File_proto_notifications_notifications_proto protoreflect.FileDescriptor

const file_proto_notifications_notifications_proto_rawDesc = "" +
	"\n" +
	"'proto/notifications/notifications.proto\x12\x13proto.notifications\x1a\x19proto/engine/engine.proto\"/\n" +
	"\x10SubscribeRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"\xfc\x02\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\x04type\x18\x02 \x01(\x0e2%.proto.notifications.NotificationTypeR\x04type\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\tR\x06gameId\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12N\n" +
	"\vmatch_found\x18\x05 \x01(\v2+.proto.notifications.MatchFoundNotificationH\x00R\n" +
	"matchFound\x12H\n" +
	"\tmove_made\x18\x06 \x01(\v2).proto.notifications.MoveMadeNotificationH\x00R\bmoveMade\x12H\n" +
	"\tgame_over\x18\a \x01(\v2).proto.notifications.GameOverNotificationH\x00R\bgameOverB\x06\n" +
	"\x04data\"\xb7\x01\n" +
	"\x16MatchFoundNotification\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1d\n" +
	"\n" +
	"player1_id\x18\x02 \x01(\tR\tplayer1Id\x12!\n" +
	"\fplayer1_name\x18\x03 \x01(\tR\vplayer1Name\x12\x1d\n" +
	"\n" +
	"player2_id\x18\x04 \x01(\tR\tplayer2Id\x12!\n" +
	"\fplayer2_name\x18\x05 \x01(\tR\vplayer2Name\"\xc3\x01\n" +
	"\x14MoveMadeNotification\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1b\n" +
	"\tpit_index\x18\x02 \x01(\rR\bpitIndex\x126\n" +
	"\n" +
	"game_state\x18\x03 \x01(\v2\x17.proto.engine.GameStateR\tgameState\x129\n" +
	"\vmove_result\x18\x04 \x01(\v2\x18.proto.engine.MoveResultR\n" +
	"moveResult\"\x86\x01\n" +
	"\x14GameOverNotification\x128\n" +
	"\vfinal_state\x18\x01 \x01(\v2\x17.proto.engine.GameStateR\n" +
	"finalState\x12\x1b\n" +
	"\twinner_id\x18\x02 \x01(\tR\bwinnerId\x12\x17\n" +
	"\ais_draw\x18\x03 \x01(\bR\x06isDraw*\x9a\x01\n" +
	"\x10NotificationType\x12!\n" +
	"\x1dNOTIFICATION_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dNOTIFICATION_TYPE_MATCH_FOUND\x10\x01\x12\x1f\n" +
	"\x1bNOTIFICATION_TYPE_MOVE_MADE\x10\x02\x12\x1f\n" +
	"\x1bNOTIFICATION_TYPE_GAME_OVER\x10\x032h\n" +
	"\rNotifications\x12W\n" +
	"\tSubscribe\x12%.proto.notifications.SubscribeRequest\x1a!.proto.notifications.Notification0\x01B@Z>github.com/laerson/mancala/proto/notifications;notificationspbb\x06proto3"

var (
	file_proto_notifications_notifications_proto_rawDescOnce sync.Once
	file_proto_notifications_notifications_proto_rawDescData []byte
)

func file_proto_notifications_notifications_proto_rawDescGZIP() []byte {
	file_proto_notifications_notifications_proto_rawDescOnce.Do(func() {
		file_proto_notifications_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_notifications_notifications_proto_rawDesc), len(file_proto_notifications_notifications_proto_rawDesc)))
	})
	return file_proto_notifications_notifications_proto_rawDescData
}

var file_proto_notifications_notifications_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_notifications_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_notifications_notifications_proto_goTypes = []any{
	(NotificationType)(0),          // 0: proto.notifications.NotificationType
	(*SubscribeRequest)(nil),       // 1: proto.notifications.SubscribeRequest
	(*Notification)(nil),           // 2: proto.notifications.Notification
	(*MatchFoundNotification)(nil), // 3: proto.notifications.MatchFoundNotification
	(*MoveMadeNotification)(nil),   // 4: proto.notifications.MoveMadeNotification
	(*GameOverNotification)(nil),   // 5: proto.notifications.GameOverNotification
	(*engine.GameState)(nil),       // 6: proto.engine.GameState
	(*engine.MoveResult)(nil),      // 7: proto.engine.MoveResult
}
var file_proto_notifications_notifications_proto_depIdxs = []int32{
	0, // 0: proto.notifications.Notification.type:type_name -> proto.notifications.NotificationType
	3, // 1: proto.notifications.Notification.match_found:type_name -> proto.notifications.MatchFoundNotification
	4, // 2: proto.notifications.Notification.move_made:type_name -> proto.notifications.MoveMadeNotification
	5, // 3: proto.notifications.Notification.game_over:type_name -> proto.notifications.GameOverNotification
	6, // 4: proto.notifications.MoveMadeNotification.game_state:type_name -> proto.engine.GameState
	7, // 5: proto.notifications.MoveMadeNotification.move_result:type_name -> proto.engine.MoveResult
	6, // 6: proto.notifications.GameOverNotification.final_state:type_name -> proto.engine.GameState
	1, // 7: proto.notifications.Notifications.Subscribe:input_type -> proto.notifications.SubscribeRequest
	2, // 8: proto.notifications.Notifications.Subscribe:output_type -> proto.notifications.Notification
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_notifications_notifications_proto_init() }
func file_proto_notifications_notifications_proto_init() {
	if File_proto_notifications_notifications_proto != nil {
		return
	}
	file_proto_notifications_notifications_proto_msgTypes[1].OneofWrappers = []any{
		(*Notification_MatchFound)(nil),
		(*Notification_MoveMade)(nil),
		(*Notification_GameOver)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_notifications_notifications_proto_rawDesc), len(file_proto_notifications_notifications_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_notifications_notifications_proto_goTypes,
		DependencyIndexes: file_proto_notifications_notifications_proto_depIdxs,
		EnumInfos:         file_proto_notifications_notifications_proto_enumTypes,
		MessageInfos:      file_proto_notifications_notifications_proto_msgTypes,
	}.Build()
	File_proto_notifications_notifications_proto = out.File
	file_proto_notifications_notifications_proto_goTypes = nil
	file_proto_notifications_notifications_proto_depIdxs = nil
}
