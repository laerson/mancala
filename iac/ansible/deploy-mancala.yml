---
- name: Deploy Mancala application to Kubernetes
  hosts: k8s_master
  become: no
  vars:
    app_namespace: mancala
    kubeconfig_path: "/home/{{ ansible_user }}/.kube/config"
    # Docker config for GitHub Container Registry
    docker_config_json: |
      {
        "auths": {
          "ghcr.io": {
            "username": "{{ github_username }}",
            "password": "{{ github_token }}",
            "auth": "{{ (github_username + ':' + github_token) | b64encode }}"
          }
        }
      }

  tasks:
    - name: Ensure kubernetes Python library is installed for current user
      pip:
        name: kubernetes
        state: present
        extra_args: --user
      become: no

    - name: Create mancala namespace
      kubernetes.core.k8s:
        name: "{{ app_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Create Docker registry secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: github
            namespace: "{{ app_namespace }}"
          type: kubernetes.io/dockerconfigjson
          data:
            .dockerconfigjson: "{{ docker_config_json | b64encode }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy storage class and persistent volumes
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/storage/local-storage-class.yaml') | from_yaml_all | list }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy PostgreSQL
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/postgres.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Redis
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/redis.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Engine service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/engine.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Matchmaking service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/matchmaking.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Games service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/games.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Auth service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/auth.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Notifications service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/notifications.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Deploy Gateway service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/gateway.yaml') | from_yaml_all | list }}"
        namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Check deployment status
      shell: kubectl get deployments -n {{ app_namespace }} -o wide
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: deployment_check
      failed_when: false

    - name: Display deployment check
      debug:
        var: deployment_check.stdout_lines

    - name: Check pod status
      shell: kubectl get pods -n {{ app_namespace }} -o wide
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: pod_check
      failed_when: false

    - name: Display pod status
      debug:
        var: pod_check.stdout_lines

    - name: Describe problematic pods (if any)
      shell: kubectl describe pods -n {{ app_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: pod_describe
      failed_when: false

    - name: Display pod descriptions
      debug:
        var: pod_describe.stdout_lines

    - name: Get deployment status
      shell: kubectl get all -n {{ app_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: deployment_status

    - name: Display deployment status
      debug:
        var: deployment_status.stdout_lines

    - name: Create NodePort service for gateway (for external access)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: gateway-nodeport
            namespace: "{{ app_namespace }}"
            labels:
              app: gateway
          spec:
            type: NodePort
            ports:
            - port: 8080
              targetPort: 8080
              nodePort: 30080
              name: http
            selector:
              app: gateway
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Get service endpoints
      shell: kubectl get svc -n {{ app_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: service_status

    - name: Display service status
      debug:
        var: service_status.stdout_lines

    - name: Display access information
      debug:
        msg:
          - "Mancala services deployed successfully!"
          - "üåê API Gateway (HTTP) accessible at: {{ ansible_default_ipv4.address }}:30080"
          - "üí° The API Gateway is the only externally accessible service"
          - "üí° CLI client should connect to: {{ ansible_default_ipv4.address }}:30080"
          - "üí° All other services are internal and accessed through the gateway"
          - "üîí Internal services: Auth, Games, Matchmaking, Notifications, Engine"
          - "Use kubectl port-forward if you need direct access to internal services"